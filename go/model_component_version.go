/*
 * Rumble API
 *
 * Rumble Network Discovery API
 *
 * API version: 1.0.0
 * Contact: support@rumble.run
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"bytes"
	"encoding/json"
)

// ComponentVersion A component ID and version
type ComponentVersion struct {
	Id      string `json:"id"`
	Version string `json:"version"`
}

// GetId returns the Id field value
func (o *ComponentVersion) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// SetId sets field value
func (o *ComponentVersion) SetId(v string) {
	o.Id = v
}

// GetVersion returns the Version field value
func (o *ComponentVersion) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// SetVersion sets field value
func (o *ComponentVersion) SetVersion(v string) {
	o.Version = v
}

type NullableComponentVersion struct {
	Value        ComponentVersion
	ExplicitNull bool
}

func (v NullableComponentVersion) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableComponentVersion) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
